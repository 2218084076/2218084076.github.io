---
layout: post
title: 语义化版本
date: 2024-07-15 11:11 +0800
tags:
  - 语义化版本
categories:
  - 语义化版本
---

> 语义化版本是指一种版本号规范，用于标识软件包的版本及其更新情况。

## 语义化版本的核心要点包括以下几个方面：

### 版本号的格式：

- 语义化版本号由三个数字组成，分别表示主 `版本号` 、`次版本号` 和 `修订号` ，格式为 **`MAJOR.MINOR.PATCH`** 。
- 其中，主版本号表示向后不兼容的改变，次版本号表示向后兼容的改变，修订号表示向后兼容的问题修正。

### 版本号的比较：

语义化版本号可以通过比较其各个数字来确定版本的更新情况。
具体来说，当两个版本号的主版本号不同，表示向后不兼容的改变；

当两个版本号的主版本号相同但次版本号不同，表示向后兼容的改变；

当两个版本号的主版本号和次版本号相同但修订号不同，表示向后兼容的问题修正。

### 版本号的预发布标识：

语义化版本号还可以包含预发布标识（如 `alpha`、`beta`、`rc`等），用于标识开发阶段或测试版本。

预发布标识应该紧跟在版本号后面，并以连字符 **`-`** 分隔。

### 版本号的元数据：

语义化版本号还可以包含元数据（如 `git commit hash`、`build timestamp`等），

用于标识构建信息或其他元数据。元数据应该紧跟在版本号或预发布标识后面，并以加号 `+` 分隔。

> 通过遵循语义化版本的规范，软件包的开发者可以更好地管理版本号及其更新情况，从而提高软件包的可维护性和可用性。
>
> 此外，语义化版本的规范也被广泛地应用于各种软件开发工具和系统中，如 `npm`、`pip` 等。
